#Reading in Drone imagery
getwd()
#drone_dtm <- rast("data/tif/drone_dtm_focal.tif") #This layer was made in Moffat_Random_Forest_Sellers to remove NAs using focal smoothing
drone_dsm <- rast("../PD_data/overview_rgb/PheasantBranch_DEM") #This layer was made in Moffat_Random_Forest_Sellers to remove NAs using focal smoothing
# Load libraries
library(terra)
#drone_dtm <- rast("data/tif/drone_dtm_focal.tif") #This layer was made in Moffat_Random_Forest_Sellers to remove NAs using focal smoothing
drone_dsm <- rast("../PD_data/overview_rgb/PheasantBranch_DEM") #This layer was made in Moffat_Random_Forest_Sellers to remove NAs using focal smoothing
#drone_dtm <- rast("data/tif/drone_dtm_focal.tif") #This layer was made in Moffat_Random_Forest_Sellers to remove NAs using focal smoothing
drone_dsm <- rast("../PB_data/overview_rgb/PheasantBranch_DEM") #This layer was made in Moffat_Random_Forest_Sellers to remove NAs using focal smoothing
#drone_dtm <- rast("data/tif/drone_dtm_focal.tif") #This layer was made in Moffat_Random_Forest_Sellers to remove NAs using focal smoothing
drone_dsm <- rast("../PB_data/overview_rgb/PheasantBranch_DEM.tif") #This layer was made in Moffat_Random_Forest_Sellers to remove NAs using focal smoothing
drone_rgb <- rast("data/tif/drone_rgb10cm.tif") #This layer was mad3 in Moffat_Random_Forest_Sellers to resample RGB to the resolution of DSM and DTM (10cm)
#drone_dtm <- rast("data/tif/drone_dtm_focal.tif") #This layer was made in Moffat_Random_Forest_Sellers to remove NAs using focal smoothing
drone_dsm <- rast("../../PB_data/overview_rgb/PheasantBranch_DEM.tif")
drone_rgb <- rast("../../PB_data/overview_rgb/PheasantBranch_RGB.tif") #This layer was mad3 in Moffat_Random_Forest_Sellers to resample RGB to the resolution of DSM and DTM (10cm)
# Renaming Bands
names(drone_rgb) <- c("red","green", "blue", "alpha")
names(drone_dtm) <- "dtm"
names(drone_dsm) <- "dsm"
# Defining RGB Vegetation Indices
VDVI = (2*drone_rgb$green-drone_rgb$red - drone_rgb$blue)/(2*drone_rgb$green+drone_rgb$red+drone_rgb$blue)
#resample RGB to match resolution of DSM
drone_rgb <- resample(drone_rgb, drone_dsm, threads = T)
writeRaster(drone_rgb, "../../PB_data/overview_rgb/PheasantBranch_RGB3cm.tif")
names(drone_rgb) <- c("red","green", "blue", "alpha")
#names(drone_dtm) <- "dtm"
names(drone_dsm) <- "dsm"
# Defining RGB Vegetation Indices
VDVI = (2*drone_rgb$green-drone_rgb$red - drone_rgb$blue)/(2*drone_rgb$green+drone_rgb$red+drone_rgb$blue)
#writeRaster(VDVI, "data/tif/drone_VDVI.tif", overwrite = TRUE)
NGRDI = (drone_rgb$green-drone_rgb$red)/(drone_rgb$green+drone_rgb$red)
#writeRaster(NGRDI, "data/tif/drone_NGRDI.tif", overwrite = TRUE)
VARI = (drone_rgb$green-drone_rgb$red)/(drone_rgb$green+drone_rgb$red-drone_rgb$blue)
#writeRaster(VARI, "data/tif/drone_VARI.tif", overwrite = TRUE)
GRRI = drone_rgb$green/drone_rgb$red
# Using terra's built in terrain characteristics function to get TPI, TRI, and Roughness from drone DSM
terrain_metrics <- terrain(drone_dsm, v=c("TRI", "TPI", "roughness"), neighbors = 8, filename="data/tif/terrain.tif")
# Using terra's built in terrain characteristics function to get TPI, TRI, and Roughness from drone DSM
terrain_metrics <- terrain(drone_dsm, v=c("TRI", "TPI", "roughness"), neighbors = 8)
# Stack all of the layers together
drone_stack <- c(drone_rgb, drone_dsm, drone_dtm, terrain_metrics$TRI, terrain_metrics$TPI,
terrain_metrics$roughness, VDVI, NGRDI, VARI, GRRI)
# Stack all of the layers together
drone_stack <- c(drone_rgb, drone_dsm, terrain_metrics$TRI, terrain_metrics$TPI,
terrain_metrics$roughness, VDVI, NGRDI, VARI, GRRI)
#rename the drone layer names
names(drone_stack) <- c("r", "g", "b", "alpha", "dsm", "dtm",  "tri", "tpi",
"roughness", "vdvi", "ngrdi", "vari", "grri")
#rename the drone layer names
names(drone_stack) <- c("r", "g", "b", "alpha", "dsm", "tri", "tpi",
"roughness", "vdvi", "ngrdi", "vari", "grri")
# Write Drone stack raster
writeRaster(drone_stack, "../../PB_data/overview_rgb/dronestack_3cm.tif", overwrite = TRUE)
library(terra)
library(sf)
library(dplyr)
library(randomForest)
# Install necessary packages
# install.packages("terra")
# install.packages("sf")
install.packages("randomForest")
library(terra)
library(sf)
library(dplyr)
library(randomForest)
library(ggplot2)
# Install necessary packages
# install.packages("terra")
# install.packages("sf")
# install.packages("randomForest")
# install.packages("caret")
# install.packages("dplyr")
install.pachages("ggplot2")
# Install necessary packages
# install.packages("terra")
# install.packages("sf")
# install.packages("randomForest")
# install.packages("caret")
# install.packages("dplyr")
install.packages("ggplot2")
ibrary(terra)
# Load libraries
library(terra)
library(sf)
library(dplyr)
library(randomForest)
library(ggplot2)
library(caret)
# Install necessary packages
# install.packages("terra")
# install.packages("sf")
# install.packages("randomForest")
install.packages("caret")
library(terra)
library(sf)
library(dplyr)
library(randomForest)
library(ggplot2)
library(caret)
#path to UAV Data folder (seperate from github repo due to size of tif files & privacy)
UAV_data <- normalizePath(file.path(wd, "..", "..", "PB_data"), winslash = "/")
